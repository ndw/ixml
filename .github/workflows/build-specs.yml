name: build-specs
on: push
jobs:
  check_branch:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.check_step.outputs.branch }}
      reponame: ${{ steps.check_step.outputs.reponame }}
      tag: ${{ steps.check_step.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get branch name, etc.
        id: check_step
        run: |
          raw=${{ github.repository }}
          reponame=${raw##*/}
          echo "reponame=${reponame}" >> $GITHUB_OUTPUT
          raw=$(git branch -r --contains ${{ github.ref }})
          branch=${raw##*/}
          echo "branch=${branch}" >> $GITHUB_OUTPUT
          tag=""
          if [ ${{ github.ref_type }} = "tag" ]; then
            tag=${{ github.ref_name }}
            echo "Running in $reponame on $branch for $tag"
          else
            echo "Running in $reponame on $branch"
          fi
          echo "tag=${tag}" >> $GITHUB_OUTPUT

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: check_branch
    env:
      HAVE_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN != '' }}
      AUTODIFF: ${{ secrets.DIFFURI != '' && secrets.DIFFPW != '' }}
      BRANCH_NAME: ${{ github.ref_name }}
      CIWORKFLOW: yes
      CI_SHA1: ${{ github.sha }}
      CI_BUILD_NUM: ${{ github.run_number }}
      CI_PROJECT_USERNAME: ${{ github.repository_owner }}
      CI_PROJECT_REPONAME: ${{ needs.check_branch.outputs.reponame }}
      CI_BRANCH: ${{ needs.check_branch.outputs.branch }}
      CI_TAG: ${{ needs.check_branch.outputs.tag }}
    steps:
      - name: Checkout the ixml repository
        uses: actions/checkout@v3

      - name: Check environment
        run: |
          echo 
          echo "HAVE_ACCESS_TOKEN=${{ env.HAVE_ACCESS_TOKEN }}"
          echo "AUTODIFF=${{ env.AUTODIFF }}"
          echo "BRANCH_NAME=${{ env.BRANCH_NAME }}"
          echo "CIWORKFLOW=${{ env.CIWORKFLOW }}"
          echo "CI_SHA1=${{ env.CI_SHA1 }}"
          echo "CI_BUILD_NUM=${{ env.CI_BUILD_NUM }}"
          echo "CI_PROJECT_USERNAME=${{ env.CI_PROJECT_USERNAME }}"
          echo "CI_PROJECT_REPONAME=${{ env.CI_PROJECT_REPONAME }}"
          echo "CI_BRANCH=${{ env.CI_BRANCH }}"
          echo "CI_TAG=${{ env.CI_TAG }}"

      - name: Build
        run: |
          ./gradlew

      - name: Setup DeltaXML
        if: ${{ env.AUTODIFF == 'true' }}
        run: |
            curl -s ${{ secrets.DIFFURI }} | openssl enc -aes-256-cbc -salt -pbkdf2 -d -k ${{ secrets.DIFFPW }} | tar zxf -

      - name: Make DeltaXML diffs
        if: ${{ env.AUTODIFF == 'true' }}
        run: |
            sh build-tools/autodiff.sh current

      - name: Cleanup DeltaXML
        if: ${{ env.AUTODIFF == 'true' }}
        run: |
            rm -rf tools/deltaxml

      - name: Deploy master to specifications
        if: ${{ env.HAVE_ACCESS_TOKEN == 'true' && github.ref_name == 'master' }}
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build/current
          token: ${{ secrets.ACCESS_TOKEN }}
          branch: gh-pages
          target-folder: /current

      - name: Deploy other branches to branch
        if: ${{ env.HAVE_ACCESS_TOKEN == 'true' && github.ref_name != 'master' }}
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build/current
          token: ${{ secrets.ACCESS_TOKEN }}
          branch: gh-pages
          target-folder: /branch/${{ github.ref_name }}
